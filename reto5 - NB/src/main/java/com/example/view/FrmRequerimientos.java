/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.example.view;

import java.util.ArrayList;
import java.sql.SQLException;
import javax.swing.table.DefaultTableModel;

import com.example.controller.RequerimientoController;
import com.example.model.vo.AsesorPorCiudadVo;
import com.example.model.vo.CompraPorProveedorVo;
import com.example.model.vo.ProyectoCasaCampestreVo;
import java.awt.Image;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JLabel;


/**
 *
 * @author Manuel Julian
 */
public class FrmRequerimientos extends javax.swing.JFrame {
    
    private ImageIcon imagen;
    private Icon icono;

    /**
     * Creates new form FrmRequerimientos
     */
    public FrmRequerimientos() {
        initComponents();
        this.setLocationRelativeTo(this);
        
        this.pintarImagen(this.jLabel1, "src\\main\\java\\com\\example\\image\\UTP_Logo.PNG");
        this.pintarImagen(this.jLabel3, "src\\main\\java\\com\\example\\image\\MisionTIC_Logo.PNG");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        miTabla = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Reto 5 - UTP - Mision TIC 2022");

        jLabel2.setText("   Seleccionar Informe");
        jLabel2.setToolTipText("");
        jLabel2.setAlignmentY(0.0F);
        jLabel2.setMaximumSize(new java.awt.Dimension(100, 25));
        jLabel2.setMinimumSize(new java.awt.Dimension(100, 25));
        jLabel2.setPreferredSize(new java.awt.Dimension(100, 25));

        jButton1.setText("Informe 1");
        jButton1.setMaximumSize(new java.awt.Dimension(100, 25));
        jButton1.setMinimumSize(new java.awt.Dimension(100, 25));
        jButton1.setPreferredSize(new java.awt.Dimension(100, 25));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Informe 2");
        jButton2.setMaximumSize(new java.awt.Dimension(100, 25));
        jButton2.setMinimumSize(new java.awt.Dimension(100, 25));
        jButton2.setPreferredSize(new java.awt.Dimension(100, 25));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Informe 3");
        jButton3.setMaximumSize(new java.awt.Dimension(100, 25));
        jButton3.setMinimumSize(new java.awt.Dimension(100, 25));
        jButton3.setPreferredSize(new java.awt.Dimension(100, 25));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jTextArea.setEditable(false);
        jTextArea.setColumns(20);
        jTextArea.setRows(5);
        jTextArea.setText("\n\n\t\t                 Descripcion de los Informes");
        jScrollPane1.setViewportView(jTextArea);

        miTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        miTabla.setName(""); // NOI18N
        jScrollPane2.setViewportView(miTabla);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 630, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 108, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 288, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18))
        );

        jLabel2.getAccessibleContext().setAccessibleName("");

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
             
        jTextArea.setText(" 1. Primer informe.\n\n Generar un informe basándose en la tabla con la información respectiva al “Líder”. \n El listado debe contener: el ID_Lider, el Nombre, el Primer_Apellido y la Ciudad_Residencia. \n Este informe debe estar ordenado por la “Ciudad_Residencia” de forma alfabética.");
        
        String[] columnNombre = {"Id Lider", "Nombre", "Primer Apellido", "Ciudad"};
        
        RequerimientoController controlador = new RequerimientoController();
        
        ArrayList<AsesorPorCiudadVo> listarA;
        
        try{
            
            listarA = controlador.consultarAsesorPorCiudad();
            Object[][] datos = new Object [listarA.size()][4];
            int index = 0;
            for (AsesorPorCiudadVo l: listarA){
                
                datos[index][0] = l.getIdLider();
                datos[index][1] = l.getNombre();
                datos[index][2] = l.getPrimerApellido();
                datos[index][3] = l.getCiudadResidencia();
                index++;
                
            }
            
            DefaultTableModel model = new DefaultTableModel(datos, columnNombre);
            miTabla.setModel(model);
        } catch (SQLException e){
            
            System.out.println(e.getMessage());
        
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        
        jTextArea.setText(" 2. Segundo informe.\n\n Realizar un informe basándose en la información de los proyectos cuya clasificación sea “Casa Campestre” \n y que estén ubicados en las ciudades de “Santa Marta”, “Cartagena” y “Barranquilla”. Este informe debe \n contener: el ID_Proyecto, la Constructora, el Nùmero_Habitaciones y la respectiva Ciudad.");
                
        String[] columnNombre = {"Id Poyecto", "Constructora", "N° Habitaciones", "Ciudad"};
        
        RequerimientoController controlador = new RequerimientoController();
        
        ArrayList<ProyectoCasaCampestreVo> listarA;
        
        try{
            
            listarA = controlador.consultarProyectoCasaCampestre();
            Object[][] datos = new Object [listarA.size()][4];
            int index = 0;
            for (ProyectoCasaCampestreVo l: listarA){
                
                datos[index][0] = l.getIdProyecto();
                datos[index][1] = l.getConstructora();
                datos[index][2] = l.getNumeroHabitaciones();
                datos[index][3] = l.getCiudad();
                index++;
                
            }
            
            DefaultTableModel model = new DefaultTableModel(datos, columnNombre);
            miTabla.setModel(model);
        } catch (SQLException e){
            
            System.out.println(e.getMessage());
        
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        jTextArea.setText(" 3. Tercer informe.\n\n Realizar un informe basándose en las compras realizadas por los proyectos con el proveedor “Homecenter” y \n para la ciudad “Salento”. Este informe debe incluir: ID_Compra, Constructora y Banco_Vinculado.");
        
        String[] columnNombre = {"Id Compra", "Constructora", "Banco"};
        
        RequerimientoController controlador = new RequerimientoController();
        
        ArrayList<CompraPorProveedorVo> listarA;
        
        try{
            
            listarA = controlador.consultarCompraPorProveedor();
            Object[][] datos = new Object [listarA.size()][4];
            int index = 0;
            for (CompraPorProveedorVo l: listarA){
                
                datos[index][0] = l.getIdCompra();
                datos[index][1] = l.getConstructora();
                datos[index][2] = l.getBancoVinculado();
                index++;
                
            }
            
            DefaultTableModel model = new DefaultTableModel(datos, columnNombre);
            miTabla.setModel(model);
        } catch (SQLException e){
            
            System.out.println(e.getMessage());
        
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmRequerimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmRequerimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmRequerimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmRequerimientos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmRequerimientos().setVisible(true);
            }
        });
    }
    
    private void pintarImagen(JLabel lbl, String ruta){
        
        this.imagen = new ImageIcon(ruta);
        this.icono = new ImageIcon(
                                    this.imagen.getImage().getScaledInstance(
                                            lbl.getWidth(),
                                            lbl.getHeight(),
                                            Image.SCALE_DEFAULT
                                    )
                                   ); 
        
        lbl.setIcon(this.icono);
        this.repaint();    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea;
    private javax.swing.JTable miTabla;
    // End of variables declaration//GEN-END:variables
}
